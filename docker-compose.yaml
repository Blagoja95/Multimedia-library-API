version: 'v3.8'

services:

  nginx:
    build:
      context: .
      dockerfile: ./docker/NGINX.Dockerfile
    container_name: lib-nginx
    restart: unless-stopped
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./service:/var/www/html/
    networks:
      - lib-net

  php-fpm:
      build:
        context: .
        dockerfile: ./docker/FPM.Dockerfile
        target: "${BUILD_TARGET:-php_fpm_dev}"
      container_name: lib-php-fpm
      restart: unless-stopped
      volumes:
        - /var/www/html/vendor
        - ./service:/var/www/html
      environment:
        MYSQL_HOST: ${MYSQL_HOST}
        MYSQL_PORT: ${MYSQL_PORT}
        MYSQL_DB_NAME: ${MYSQL_DB_NAME}
        MYSQL_USERNAME: ${MYSQL_USERNAME}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        SECRET_KEY: ${SECRET_KEY}
        SERVER_NAME: ${SERVER_NAME}
        XDEBUG_MODE: "${XDEBUG_MODE:-off}"
      networks:
        - lib-net

  phpMyAdmin:
    image: 'phpmyadmin'
    container_name: lib-phpMyAdmin
    ports:
      - ${PHP_ADMIN_PORT}:80
    deploy:
      mode: replicated
      replicas: ${PHP_ADMIN_REPLICAS}
    restart: unless-stopped
    links:
      - mysql-db
    depends_on:
      - mysql-db
    environment:
      PMA_HOST: ${PHP_ADMIN_HOST}
      PMA_PORT: ${MYSQL_PORT}
      PMA_ARBITRARY: ${PHP_ADMIN_ARBITRARY}
    networks:
      - lib-net

  mysql-db:
    build:
      context: .
      dockerfile: ./docker/MySQL.Dockerfile
      target: "${BUILD_TARGET:-mysql_dev}"
    container_name: lib-mysql
    image: lib-mysql-image
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: ${MYSQL_REPLICAS}
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - 'lib-mysql:/var/lib/mysql'
    networks:
      - lib-net

volumes:
  lib-mysql:

networks:
  lib-net: { }